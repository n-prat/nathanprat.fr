#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"
dir=$(pwd)

echo -e "\e[34m\e[1mStarting pre-push hook \e[0m"

echo -e "\e[34mBuilding site... \e[0m"
jekyll build
echo -e "\e[34mBuilding completed \e[0m"

cd ..
echo "Now in $(pwd)"
echo -e "\e[34mUploading to s3... \e[0m"
s3_website push
echo -e "\e[34mUpload completed... \e[0m"

cd $dir
echo "Back in $(pwd)"
echo -e "\e[34m\e[1mPre-push hook completed \e[0m"

exit 0
